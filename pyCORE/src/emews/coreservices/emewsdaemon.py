'''
CoreServices: classes which interface with the CORE network emulator, for automatic launching of
eMews clients (which themselves will send the proper commands to launch services)

This is the main CoreService for the eMews daemon.  Must be launched on a node before any clients.

Created on Mar 5, 2018
@author: Brian Ricks
'''

# Note, core in module path belongs to CORE, not emews
from core.service import CoreService

class EmewsDaemon(CoreService):
    '''
    CORE Service class for the eMews daemon
    '''
    _name = "eMewsDaemon"
    _group = "eMews"

    _configs = ("runemewsdaemon.sh", "emewsconf.yml",)
    _startindex = 20  # make sure this is higher than the emews daemon CoreService
    _dirs = ()
    _startup = ("sh runemewsdaemon.sh",)
    _shutdown = ()
    _validate = ()

    @classmethod
    def generateconfig(cls, node, filename, services):
        '''
        Generates the emews daemon per-node specific config.
        '''
        if filename == "runemewsdaemon.sh":
            return """\
#!/bin/sh
export PYTHONPATH=/home/coreuser/
python /home/coreuser/emews/emewsdaemon.py -c emewsconf.yml
"""
        elif filename == "emewsconf.yml":
            return """\
# Generated by the eMews daemon CORE service
# YAML 1.2 compliant
general:
  # Name of the node
  node_name: %s
""" % (node.name)

        return ""
